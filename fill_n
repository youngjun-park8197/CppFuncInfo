##################
  Reference LINK
##################

1. 출처 : https://namwhis.tistory.com/entry/C-%EB%B0%B0%EC%97%B4-%EC%B4%88%EA%B8%B0%ED%99%94-stdfill-stdfilln-%EC%A0%95%EB%A6%AC

* fill_n : 배열 초기화 

< 배열초기화 >
- 1차원배열의 모든 원소의 값을 0로 하고 싶은 경우,
1) int arr[5]={};
2) int arr[5]={0};
3) int arr[5]={0,};

- 일부만 지정하는 경우, 나머지는 모두 0으로 채워짐
  int arr[5]={1,} => 1,0,0,0,0

- 1차원배열의 모든 원소의 값을 1로 하고 싶은 경우,
1) 각 원소 직접 지정
  int arr[5]={1,1,1,1,1}

2) std::fill_n 이용
  int arr[5];
  fill_n(arr,5,1);
  -> 선언과 동시에 초기화 하는 것이 아닌 상태

  * fill_n(변경하려는 원소의 범위 시작주소, 변경하려는 원소 갯수, 변경 값)

- 배열 전체를 변경 하려면 배열명 : 배열의메모리주소(arr) => fill_n(arr,5,1);
  > 배열 시작주소가 곧 배열명

- 배열의 2번째 원소부터 변경하려면 : arr+1 => fill_n(arr+1,4,1);
  > 배열 시작주소보다 하나 더 증가한 위치의 주소, 그리고 원소의 갯수는 하나 줄어드므로 4

3) std::fill이용
  int arr[5];
  fill(arr,arr+5,1);
  * fill_n(변경하려는 원소의 범위 시작주소, 변경하려는 원소의 범위 종료주소, 변경 값)

- 배열의 2번째 원소부터 4번째 원소까지 변경할 경우,
arr+1, arr+3 으로 생각했으나 => arr[1],arr[2] 만 변경됨
arr+1, arr+4 로 해야 => arr[1],arr[2],arr[3] 가 변경됨
[arr[0]] [arr[1]] [arr[2]] [arr[3]] [arr[4]] : arr[4]의 메모리주소를 종료주소로 해줘야 arr[3]까지 포함
